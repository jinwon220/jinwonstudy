package kr.or.bit;
/*
 함수 : 기능의 최소단위 (method)
 함수의 종류
 
*void 사용하면 (돌려주는 값이 없다) : return value(값)이 없다.
*return type : [8가지 기본 타입] + String + 참조(사용자정의) + 배열 + Collection + Interface
 - return type 이 있으면 반드시 구문안에서 return 키워드 명시
 
 1. void , parameter(0) : void print(String str) { 실행코드 }
 2. void , parameter(x) : void print() { 실행코드 }
 3. return Type , parameter(0) : int print(int data) { return 100+data; }
 4. return Type , parameter(x) : int print() { return 200; }
 
 함수는 반드시 호출(Call) 되어야만 실행된다 : 누군가 그의 이름을 불러주어야 한다...
 
*/

public class Fclass {
	public void m() { // 함수의 이름은 의미있는 단어의 조합	void getChannelNumber()
		System.out.println("일반함수 : void , param(x)");
	}
	
	public void m2(int i) {
		System.out.println("param  value : " + i);
		System.out.println("일반함수 : void , param(0)");
	}
	
	public int m3() { // return type 이 있으면 반드시 return 키워드 사용
		return 123;
	}
	
	public int m4(int data) {
		return data+1;
	}
	
	//접근자(한정자) private
	//어떤 의미의 코드 : class 내부에서 사용 (다른 함수를 도와주는 역활)
	//다른 여러개의 함수가 가지는 공톡적인 내용을 한 곳의 함수에 모아서 기능을 제공하면 유지보수(수정 처리)가 편하다
	private int operationMethod(int data ) {
		return data * 100;
	}
	
	public int sum(int data) {
		return operationMethod(data);
	}
	
	public int sum2(int data) {
		return operationMethod(data);
	}
	
	//확장함수 (parameter 를 늘릴 수 있다)
	public int sum3(int i, int j) {
		return i+j;
	}
	
	//Quiz
	//a 와 b 둘중에 큰값을 return 하는 함수를 만드세요
	//ex) max(500, 200) 이면 return 되는 값은 500^^
	//public int max(int a, int b){}
	
	//return은 되도록 한번만 사용하기(return 반복적인 사용은 좋지 않다)
	public int max(int a, int b) {
		return (a >= b)?a:b;
	}
	
	public String concat(String s, String s2, String s3) {
		//String result =
		//return result;
		return s + "/" + s2 + "/" + s3;
	}
	
	//클래스는 타입이다
	//public int call(){return 100;}
	//(Tv : 클래스)
	//1.public Tv call(){return Tv;(x)} 
	//2.public Tv call(){Tv t = new Tv(); return t;} (0)
	//3.public Tv call(){return new Tv();}(0)
	// ***2번과 3번은 같은 값이다 !!!!*** (매우 중요)
	
	public Tv objmethod() {
		Tv t = new Tv();
		t.brand_name = "LG";
		t.channel_up();
		return t;
	}
	
	public Tv objmethod2() {
		return new Tv();
		//주소값 리턴
	}
	
	
	public void objMethod3(Tv t) { //Tv 타입을 갖는 객체의 주소를 넘기면 그 안에 정보를 출력하는 함수
		System.out.println("정보 출력");
		System.out.println("채널 정보 : " + t.channel);
		System.out.println("브랜드 이름 : " + t.brand_name);
	}
}
