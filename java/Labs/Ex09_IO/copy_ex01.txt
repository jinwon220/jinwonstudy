importjava.io.ByteArrayInputStream;importjava.io.ByteArrayOutputStream;importjava.util.Arrays;/*I/O1.stream(연결통로,입출력통로,중간매개체)2.stream입출력의크기(음료빨대:기본적으로1byte)>>byte입출력>>byte배열3.JavaAPI제공하는클래스I/O작업byte처리InputStream(추상),OutputStream(추상)두개의추상클래스상속(재정의)클래스는대상(momery)ByteArrayInputStream,ByteArrayOutStream대당(file)FileInputStream,FileOutputStream추가적으로보조클래스Buffer(I/O)의성늘을향상시깉다...BufferedInputStream,BufferedOutputStream*/publicclassEx01_Stream{publicstaticvoidmain(String[]args){//Memory(배열)//byte(-128~127):정수값byte[]inSrc={0,1,2,3,4,5,6,7,8,9};//System.out.println(inSrc[5]);byte[]outSrc=null;//outsrc메모리를가지고있지않다ByteArrayInputStreaminput=null;//배열데이터readByteArrayOutputStreamoutput=null;//배열데이터wrtieinput=newByteArrayInputStream(inSrc);//생성자insrc배열주소read할수없다.output=newByteArrayOutputStream();//write하는대상(memory)System.out.println("outputbefor:"+Arrays.toString(outSrc));//공식같은로직(암기)intdata=0;while((data=input.read())!=-1){//더이상read()할자원이없다면return-1System.out.println("data:"+data);//System.out.println("input.read()"+input.read());//input.read()가내부적으로next()기능을가지고있다.output.write(data);//write대상:ByteArrayOutputStream객체read()>>write}outSrc=output.toByteArray();//자신이가지고잇는값을배열로만들어서//byte[]outSrc=null;에게주소값할당System.out.println("outSrc:After>>"+Arrays.toString(outSrc));}}